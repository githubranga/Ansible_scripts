Slide 1 -- Agenda 

this is the Agenda that we are going to talk about Ansible in this session. 

Slide 2: -- What is Ansible 

Ansible is a configuration management tool to automate most of the repetitive tasks. 

even we can automate provisioning and application deployment using Ansible. 

Here we have two components: 1. Ansible control node (in control node Ansible s/w is installed to manage target nodes) 
                             2. Target nodes (where we run the automation scripts using Ansible control node) 
Also there is file name called Inventory file in ANsible control node. here we maintain all the target node host names/ips. 

Slide 3: Advantages of Ansible

there are so many advantages of Ansible like i mentined here. 

one of the major advantage that we can note here is "Agentless". Ansible is a agent less software. that means 
we dont need to install any agent on the target servers. 
we setup SSH password less connectivity betwen the nodes (control node and target node) to communicate each other. 

Slide 4: Features and Capabilites

as we discussed already, Ansible has so many features. 

like we can do the configuration management. suppose if you want install some software on 100s of servers, we can do that in all of the servers with just one simple task using Ansible playbook 
configuration management. --- restart of 100 servers
application deployment --- copy of one file to 100s of servers 
orchestration --
cloud provisiong -- even we can provision the servers on cloud whether it may be AWS or Azure or GCP  

Ansible Architecture:
==================
as we already seen, this has mainly two components 
                      1. Ansible control node (in control node Ansible s/w is installed to manage target nodes) 
                      2. Target nodes (where we run the automation scripts using Ansible control node) 
                      3. Inventory file--- where we update all the target node hosts/ips. 
                      4. there are some in-built or core modules supported by Ansible like copy, service, yum, etc... 
                      5. Even we can integrate Ansible with puble/private cloud. 
                      6. all our tasks are written in playbook 
Ansible Installation flow chart: 
===================
=> ansible configuration stores at /etc/ansible/ansible.cfg 
=> hosts file in /etc/ansible is called inventory file , here you can keep target server ips. even you can group them if needed 
=> SSH passwordless conntivity betwen control node and target nodes 

1. create the pub andn priv keys on the server side (Ansible contol node). 
	ssh-keygen -t rsa -- it generates pub key and private key 
	cat ~/.ssh/id_rsa.pub --- copy the o/p of this command to the target server

2. copy the public key to the target node. (.ssh/authorized_keys)
	cd /root/.ssh  --- by default it goes to ec2-user.. so make sure you go to /root/.ssh 
	vi authorized_keys -- append or paste the above o/p

3. verify the connectivity now from server to target node 
	ssh <target_server_ip> 

Ansible ad-hoc commands & Modules
==========================

Run the command thru commmand line.. these are called adhoc commands. 
it is easy to run the commands directy using command line tool but these are not reusable. 

most of the tasks that are not repetitive, we use ansible ad-hoc commands. example.. reboot of servers, copy files, manage package 

ad-hoc command syntax looks like this 

Ansible playbook & Modules:
===================
playbooks is nothing but set of instructions that we are passing to Ansibl to work on. 
all playbooks are written in YAML format. 

==> playbook is a single yaml file containing a set of plays. 

     ==> A play defines, a set of activities to be run on a single or group of hosts 
            
          ==> A task is a single action to be perfored on host
Ansible Modules
==============
diffrent actions run by tasks are called Modules. 
they are categorized into various groups based on their functionality. like copy, service, yum, file 









